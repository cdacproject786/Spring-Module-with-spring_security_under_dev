create table Admin_Primary
 (
 Admin_ID int(10) primary key auto_increment,
 Email varchar(100) not null unique key,
 Pwd varchar(250) not null,
 Last_Updated_Date datetime default now(),
 Ext_Col_1 varchar(100),
 Ext_Col_2 varchar(100),
 Ext_Col_3 varchar(100) 
 );

alter table Admin_Primary Auto_Increment = 10001;

create table Doctor_Med_Registration
(
 Medical_Reg_Id int(10) primary key,
 Registration_Council Varchar(100) not null,
 Registration_Year Year not null,
 Degree Varchar(20) not null, 
 College Varchar(100) not null,
 Year_Of_Completion Year not null,
 Last_Updated datetime default now(), 
 Extra_Col1 Varchar(100) default null,
 Extra_Col2 Varchar(100) default null,
 Extra_Col3 Varchar(100) default null
);
 
create table Doctor_Establishment(
EID int(10) primary key auto_increment,
Establishment char(1) NOT NULL,
Establishment_Name varchar(100) NOT NULL,
Establishment_Location varchar(100) NOT NULL,
Establishment_City varchar(100) NOT NULL,
Establishment_Proof varchar(100),
Establishment_Pin char(6) NOT NULL,
Last_Updated datetime default now() NOT NULL,
Extra_Col1 varchar(200) NULL,
Extra_Col2 varchar(200) NULL,
Extra_Col3 varchar(200) NULL
);

alter table Doctor_Establishment Auto_Increment = 10001;
CREATE TABLE SECURITY_QUESTIONS
(
SECURITY_QUESTIONS_ID INT(10) PRIMARY KEY AUTO_INCREMENT,
SECURITY_QUESTION VARCHAR(50) NOT NULL,
LAST_UPDATED DATETIME DEFAULT NOW(),
EXTRA_COL1 VARCHAR(200),
EXTRA_COL2 VARCHAR(200),
EXTRA_COL3 VARCHAR(200)
);

create table Address
(
 Address_ID int(10) primary key auto_increment,
 Address_line_1 Varchar(100) not null,
 User_State Varchar(50) not null,
 City Varchar(50) not null,
 PinCode Char(6) not null,
 Country Varchar(40) not null,
 Last_Updated datetime default now(),
 Extra_Col1 Varchar(100) default null,
 Extra_Col2 Varchar(100) default null,
 Extra_Col3 Varchar(100) default null
);

alter table Address Auto_Increment = 10001;

CREATE TABLE PATIENT_MED_RECORD(
MED_RECORD_ID INT(10) PRIMARY KEY AUTO_INCREMENT,
BLOOD_PRESSURE CHAR(7) NOT NULL, 
WEIGHT DECIMAL(7,2) NOT NULL,
SUGAR_LEVEL CHAR(3) NOT NULL,
BLOOD_GROUP CHAR(3) NOT NULL,
DISABILITY CHAR(1) NOT NULL DEFAULT 'N',
LAST_UPDATED_DATE DATETIME DEFAULT NOW(), 
INSURANCE_ID VARCHAR(20) UNIQUE KEY,
INSURANCE_NAME VARCHAR(50),
INSURANCE_EXPIRE_DATE DATE,
ABHA_NUMBER CHAR(17) UNIQUE KEY,
EXT_COL_1 VARCHAR(100),
EXT_COL_2 VARCHAR(100),
EXT_COL_3 VARCHAR(100),
CHECK (DISABILITY IN ('Y','N'))
);


ALTER TABLE PATIENT_MED_RECORD AUTO_INCREMENT = 10001;

CREATE TABLE PATIENT_PRIMARY
(

UID INT(10) PRIMARY KEY AUTO_INCREMENT,

MED_RECORD_ID INT(10),

PROFILE_PHOTO VARCHAR(100),

FNAME VARCHAR(50) NOT NULL,

LNAME VARCHAR(50) NOT NULL,

EMAIL VARCHAR(100) NOT NULL UNIQUE KEY,

Pwd varchar(255) NOT NULL,

Date_of_Birth DATE NOT NULL,

ADHAAR_CARD CHAR(12) NOT NULL UNIQUE KEY,

PHONE CHAR(13) NOT NULL UNIQUE KEY,

GENDER CHAR(1) NOT NULL,

MARITAL_STATUS CHAR(1) NOT NULL,

OCCUPATION VARCHAR(100) NOT NULL,

ADDRESS_ID INT(10) UNIQUE,

SECURITY_QUESTIONS_ID INT(10),

SECURITY_QUESTIONS_ANSWER VARCHAR(100),

LAST_UPDATED DATETIME DEFAULT NOW()NOT NULL, 

EXT_COL_1 VARCHAR(100) NULL,
EXT_COL_2 VARCHAR(100) NULL,
EXT_COL_3 VARCHAR(100) NULL,
CHECK (MARITAL_STATUS IN('M','U','D')),
CHECK (GENDER IN('M','F','T','O')),
CONSTRAINT fk_question_id FOREIGN KEY (SECURITY_QUESTIONS_ID) REFERENCES SECURITY_QUESTIONS(SECURITY_QUESTIONS_ID) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT fk_patient_med_record FOREIGN KEY (MED_RECORD_ID) REFERENCES PATIENT_MED_RECORD(MED_RECORD_ID) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT fk_address_id FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

ALTER TABLE PATIENT_PRIMARY AUTO_INCREMENT = 10001;

CREATE TABLE PATIENT_MED_LOG(
MED_LOG_ID INT(10) PRIMARY KEY AUTO_INCREMENT,
PRESCRIPTION VARCHAR(255),
LAB_REPORT VARCHAR(255),
LAST_UPDATED DATETIME DEFAULT NOW() NOT NULL,
UID INT(10),
DRUG_NAME VARCHAR(255),
MORNING BOOLEAN,
AFTERNOON BOOLEAN,
EVENING BOOLEAN,
EXTRA_COL1 VARCHAR(200) NULL,
EXTRA_COL2 VARCHAR(200) NULL,
EXTRA_COL3 VARCHAR(200) NULL,
CONSTRAINT FK_UID FOREIGN KEY (UID) REFERENCES PATIENT_PRIMARY(UID) ON UPDATE CASCADE ON DELETE CASCADE
);

ALTER TABLE PATIENT_MED_LOG AUTO_INCREMENT = 10001;


create table Doctor_Avail_Master(
Doctor_ID int(10) primary key auto_increment,
Doctor_Avail_Time varchar(20) NOT NULL,
Doctor_Avail_Day varchar(20) NOT NULL,
Fees decimal(10,2) NOT NULL,
Last_Updated datetime default now(),
Extra_Col1 varchar(200) NULL,
Extra_Col2 varchar(200) NULL,
Extra_Col3 varchar(200) NULL
);
alter table Doctor_Avail_Master Auto_Increment = 10001;

CREATE TABLE DOCTOR_PRIMARY
( 
 DOCTOR_ID INT(10) PRIMARY KEY,
 SECURITY_QUESTIONS_ANSWER VARCHAR(50),
 ADDRESS_ID int(10) NOT NULL,
 MEDICAL_REG_ID int(10) NOT NULL UNIQUE KEY,
 EID INT(10) NOT NULL,
 SECURITY_QUESTIONS_ID int(10) NOT NULL,
 FNAME VARCHAR(50) NOT NULL,
 LNAME VARCHAR(50) NOT NULL,
 EMAIL VARCHAR(50) UNIQUE KEY NOT NULL,
 PWD VARCHAR(255) NOT NULL,
 PHONE_NUMBER CHAR(13) UNIQUE KEY NOT NULL,
 GENDER CHAR(1) NOT NULL,
 PAN_CARD CHAR(10) UNIQUE KEY NOT NULL,
 ADHAAR_CARD CHAR(12) UNIQUE KEY NOT NULL,
 SPECIALIZATION VARCHAR(50) NOT NULL,
 YEAR_OF_EXPERIENCE INT(2) NOT NULL,
 PROFILE_STATUS CHAR(1) NOT NULL DEFAULT 'U',
 PROFILE_PHOTO VARCHAR(100),
 LAST_UPDATED DATETIME DEFAULT NOW(),
 EXTRA_COL1 VARCHAR(100),
 EXTRA_COL2 VARCHAR(100),
 EXTRA_COL3 VARCHAR(100),
 CHECK (GENDER IN ('M','F','T','O')),
 CHECK (PROFILE_STATUS IN ('U','V')),

 CONSTRAINT fk_DOCTOR_ID FOREIGN KEY (DOCTOR_ID)  
 REFERENCES DOCTOR_AVAIL_MASTER(DOCTOR_ID)  
 ON DELETE CASCADE  
 ON UPDATE CASCADE,

 CONSTRAINT fk__DocPrim_ADDRESS_ID FOREIGN KEY (ADDRESS_ID)  
 REFERENCES ADDRESS(ADDRESS_ID)  
 ON DELETE CASCADE  
 ON UPDATE CASCADE,
 
 CONSTRAINT fk_MEDICAL_REG_ID FOREIGN KEY (MEDICAL_REG_ID)  
 REFERENCES DOCTOR_MED_REGISTRATION(MEDICAL_REG_ID)  
 ON DELETE CASCADE  
 ON UPDATE CASCADE,

 CONSTRAINT fk_EID FOREIGN KEY (EID)  
 REFERENCES DOCTOR_ESTABLISHMENT(EID)  
 ON DELETE CASCADE  
 ON UPDATE CASCADE,

 CONSTRAINT fk_SECURITY_QUESTIONS_ID FOREIGN KEY (SECURITY_QUESTIONS_ID)  
 REFERENCES SECURITY_QUESTIONS(SECURITY_QUESTIONS_ID)  
 ON DELETE CASCADE  
 ON UPDATE CASCADE
);

